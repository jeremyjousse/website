name: Build, test and Deploy to Github Pages

on:
  push:
    branches: ["main"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/configure-pages@v1
        id: pages

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - run: pnpm install

      - run: pnpm run build

      - name: Fix permissions
        run: |
          chmod -c -R +rX "_site/" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - uses: actions/setup-node@v3
        name: Uses pnpm
        with:
          node-version: lts/*

      - uses: pnpm/action-setup@v2
        name: Uses pnpm
        with:
          version: 8
          run_install: false

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm exec playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # - name: Run unit tests and coverage
      #   run: pnpm run test:coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.organization=jeremyjousse
            -Dsonar.projectKey=jeremyjousse_website
            -Dsonar.sources=src
            -Dsonar.sources.exclusions="**/*.test.ts",
            -Dsonar.tests=playwright,vitest
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.pullrequest.branch=${{github.event.pull_request.head.ref}}
            -Dsonar.pullrequest.key=${{github.event.pull_request.number}}
            -Dsonar.scm.revision=${{github.event.pull_request.head.ref}}

      # - name: Report test-coverage to DeepSource
      #   run: |
      #     # Install the CLI
      #     curl https://deepsource.io/cli | sh

      #     # Send the report to DeepSource
      #     ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./coverage/lcov.info

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/deploy-pages@v1
        id: deployment
